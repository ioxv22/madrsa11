const db = require('../config/database');

const updateScenarioLinks = async () => {
  try {
    console.log('๐ ุชุญุฏูุซ ุฑุจุท ุงูุณููุงุฑูููุงุช ุจุงูููุงุฏ ุงูุฌุฏูุฏุฉ...');

    // ุญุฐู ุฌููุน ุงูุฑูุงุจุท ุงููุฏููุฉ
    const clearLinksQuery = 'DELETE FROM scenario_subjects';
    
    await new Promise((resolve, reject) => {
      db.query(clearLinksQuery, (err, result) => {
        if (err) {
          console.error('โ ุฎุทุฃ ูู ุญุฐู ุงูุฑูุงุจุท ุงููุฏููุฉ:', err);
          reject(err);
        } else {
          console.log('๐๏ธ ุชู ุญุฐู ุฌููุน ุงูุฑูุงุจุท ุงููุฏููุฉ');
          resolve(result);
        }
      });
    });

    // ุงูุญุตูู ุนูู IDs ุงูููุงุฏ ุงูุฌุฏูุฏุฉ
    const getSubjectIds = `
      SELECT id, name FROM subjects 
      WHERE name IN ('mathematics', 'physics', 'chemistry', 'english', 'arabic', 'biology')
      ORDER BY name
    `;

    const subjects = await new Promise((resolve, reject) => {
      db.query(getSubjectIds, (err, results) => {
        if (err) {
          reject(err);
        } else {
          resolve(results);
        }
      });
    });

    console.log('๐ ุงูููุงุฏ ุงููุชุงุญุฉ:');
    subjects.forEach(subject => {
      console.log(`- ${subject.name}: ID ${subject.id}`);
    });

    const subjectMap = {};
    subjects.forEach(subject => {
      subjectMap[subject.name] = subject.id;
    });

    // ุงูููุงุฏ ุงูุฃุณุงุณูุฉ ูุฌููุน ุงูุณููุงุฑูููุงุช
    const coreSubjects = ['mathematics', 'english', 'arabic'];

    // ุชุนุฑูู ุงูุณููุงุฑูููุงุช ุงูุฌุฏูุฏุฉ
    const scenarioSubjects = {
      1: [...coreSubjects, 'chemistry', 'biology'], // ุนุงู - ุณููุงุฑูู 1
      2: [...coreSubjects, 'physics', 'chemistry'], // ุนุงู - ุณููุงุฑูู 2
      3: [...coreSubjects, 'physics', 'chemistry'], // ูุชูุฏู - ุณููุงุฑูู 1
      4: [...coreSubjects, 'chemistry', 'physics', 'biology'] // ูุชูุฏู - ุณููุงุฑูู 2
    };

    console.log('๐ฏ ุฑุจุท ุงูุณููุงุฑูููุงุช ุจุงูููุงุฏ:');

    // ุฅุฏุฑุงุฌ ุงูุฑูุงุจุท ุงูุฌุฏูุฏุฉ
    for (const [scenarioId, subjectNames] of Object.entries(scenarioSubjects)) {
      console.log(`\n๐ ุงูุณููุงุฑูู ${scenarioId}:`);
      
      for (const subjectName of subjectNames) {
        const subjectId = subjectMap[subjectName];
        const isCore = coreSubjects.includes(subjectName);

        if (!subjectId) {
          console.error(`โ ุงููุงุฏุฉ ${subjectName} ุบูุฑ ููุฌูุฏุฉ`);
          continue;
        }

        const insertLink = `
          INSERT INTO scenario_subjects (scenario_id, subject_id, is_core) 
          VALUES (?, ?, ?)
        `;

        await new Promise((resolve, reject) => {
          db.query(insertLink, [scenarioId, subjectId, isCore], (err, result) => {
            if (err) {
              console.error(`โ ุฎุทุฃ ูู ุฑุจุท ุงููุงุฏุฉ ${subjectName} ุจุงูุณููุงุฑูู ${scenarioId}:`, err);
              reject(err);
            } else {
              console.log(`   โ ${subjectName} ${isCore ? '(ุฃุณุงุณู)' : '(ุงุฎุชูุงุฑู)'}`);
              resolve(result);
            }
          });
        });
      }
    }

    console.log('\n๐ ุชู ุชุญุฏูุซ ุฌููุน ุฑูุงุจุท ุงูุณููุงุฑูููุงุช ุจูุฌุงุญ!');
    console.log('\n๐ ููุฎุต ุงูุณููุงุฑูููุงุช:');
    console.log('๐ ุงููุณุงุฑ ุงูุนุงู:');
    console.log('   ๐ ุงูุณููุงุฑูู 1: ุฑูุงุถูุงุช + ุฅูุฌููุฒู + ุนุฑุจู + ููููุงุก + ุฃุญูุงุก');
    console.log('   ๐ ุงูุณููุงุฑูู 2: ุฑูุงุถูุงุช + ุฅูุฌููุฒู + ุนุฑุจู + ููุฒูุงุก + ููููุงุก');
    console.log('๐ ุงููุณุงุฑ ุงููุชูุฏู:');
    console.log('   ๐ ุงูุณููุงุฑูู 1: ุฑูุงุถูุงุช + ุฅูุฌููุฒู + ุนุฑุจู + ููุฒูุงุก + ููููุงุก');
    console.log('   ๐ ุงูุณููุงุฑูู 2: ุฑูุงุถูุงุช + ุฅูุฌููุฒู + ุนุฑุจู + ููููุงุก + ููุฒูุงุก + ุฃุญูุงุก');

    process.exit(0);

  } catch (error) {
    console.error('โ ุฎุทุฃ ุนุงู:', error);
    process.exit(1);
  }
};

// ุชุดุบูู ุงูุณูุฑูุจุช
updateScenarioLinks();